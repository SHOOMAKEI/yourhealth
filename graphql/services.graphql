
type ServiceCategory {
    id: ID!
    name: String!
    description: String
    is_active: Boolean!
    service_sub_categories: [ServiceSubCategory!] @hasMany
    services:[Service!] @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type ServiceSubCategory {
    id: ID!
    name: String!
    description: String
    is_active: Boolean!
    services_category: ServiceCategory! @belongsTo
    services:[Service!] @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Service {
    id: ID!
    name: String!
    description: String
    is_active: Boolean!
    services_sub_category: ServiceSubCategory! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

type RequestedService {
    id: ID
    name: String
    description: String
    is_processed: Boolean
    provider_profile: ProviderProfile
    created_at: DateTime
    updated_at: DateTime
}

input RequestedServiceInput {
    name: String!
    description: String
}

enum Trashed {
  ONLY @enum(value: "only")
  WITH @enum(value: "with")
  WITHOUT @enum(value: "without")
}

# type ServiceCategoryPaginator {
#   data: [ServiceCategory]
#   paginatorInfo: PaginatorInfo
# }

