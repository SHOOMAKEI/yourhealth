type ClientProfile {
  id: ID!
  title: String
  first_name: String
  middle_name: String
  last_name: String
  username: String
  mobile_number: String!
  alternative_mobile_number: String!
  email: String!
  address:String!
  physical_address: String
  dob: DateTime
  gender: String
  bio: String
  is_active: Boolean
  user: User
}

type ClientTeam {
  id: ID!
  name: String!
  trading_name: String
  tin: String
  vrn: String
  mobile_number: String
  alternative_mobile_number: String
  email: String!
  address:String
  physical_address: String
  website: String
  registration_number: String
  registration_date: String
  description: String
  is_active:Boolean
  team_type: String
  owner: User
  created_at: DateTime!
  updated_at: DateTime!
}

type PackageSubscription {
  id: ID!
  package_plan: PackagePlan!
  user: User!
  trial_ends_at: DateTime
  starts_at: DateTime
  ends_at: DateTime
  cancels_at: DateTime
  canceled_at: DateTime
  timezone: String
  payer: Payer
}

type TeamPackageSubscription {
  id: ID!
  package_plan: PackagePlan!
  user: User!
  trial_ends_at: DateTime
  starts_at: DateTime
  ends_at: DateTime
  cancels_at: DateTime
  canceled_at: DateTime
  timezone: String
  created_at: DateTime!
  updated_at: DateTime!
}

type TeamInvitation {
  id: ID!
  client_team: PackagePlan!
  user: User!
  trial_ends_at: DateTime
  role: Role
  email: String
  token: String
  has_account: Boolean
  created_at: DateTime!
  updated_at: DateTime!
}

type MembershipCategory {
    id: ID!
    name: String!
    description: String
    is_active: Boolean
    created_at: DateTime!
    updated_at: DateTime!
}

type MembershipClass {
    id: ID!
    name: String!
    description: String
    is_active: Boolean
    created_at: DateTime!
    updated_at: DateTime!
}

type PackagePlan {
    id: ID!
    name: String!
    currency: String
    is_active: Boolean
    price: Int
    has_price: Boolean
    has_member_range: Boolean
    features: [PackageFeature] @belongsToMany
    ranges: [PackageMembershipRange] @belongsToMany
    invoice_interval: String
    grace_period: Int
    grace_interval: String
    prorate_day: Int
    prorate_period: Int
    prorate_extend_due: Int
    active_subscribers_limit: Int
    membership_category: MembershipCategory @hasOne
    created_at: DateTime!
    updated_at: DateTime!
}

type PackageMembershipRange {
    id: ID!
    min: Int
    max: Int
    price: Int
    currency: String
    created_at: DateTime!
    updated_at: DateTime!
}

type PackageFeature {
    id: ID!
    services: [Service]!
    package_plan: PackagePlan!
    price: Int!
    compare_pricee: Int
    currency: String!
    other_price_factor: String
    created_at: DateTime!
    updated_at: DateTime!
}

enum Payer {
  SELF @enum(value: "self")
  TEAM @enum(value: "team")
}
